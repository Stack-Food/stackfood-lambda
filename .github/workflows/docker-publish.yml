name: Build and Publish Docker image for Lambda

on:
  push:
    branches: ["master", "develop"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  AWS_REGION: us-east-1 # ajuste conforme necessário
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  LAMBDA_FUNCTION_NAME: stack-food-lambda-function # ajuste conforme necessário

jobs:
  build_and_publish:
    name: Build and Publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if Dockerfile exists
        run: |
          if [ ! -f ./src/StackFood.Lambda/Dockerfile ]; then
            echo "❌ Dockerfile not found!" && exit 1
          fi

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Define image tags
        id: tagger
        run: |
          REPO=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          SHORT_SHA=${GITHUB_SHA::7}
          TAGS=""

          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            TAGS="${REPO}:develop"
          elif [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            TAGS="${REPO}:latest,${REPO}:${SHORT_SHA}"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION_TAG=$(echo "${GITHUB_REF}" | sed 's|refs/tags/||')
            TAGS="${REPO}:${VERSION_TAG},${REPO}:latest"
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/StackFood.Lambda/Dockerfile
          push: true
          tags: ${{ steps.tagger.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --image-uri ${{ steps.build-and-push.outputs.image }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}